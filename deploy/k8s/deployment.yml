apiVersion: v1
kind: Namespace
metadata:
  name: doyourchores-cluster
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doyourchores-back
spec:
  replicas: 1
  selector:
    matchLabels:
      app: doyourchores-back
  template:
    metadata:
      labels:
        app: doyourchores-back
    spec:
      containers:
        - name: doyourchores-back
          image: doyourchores.azurecr.io/doyourchores:backend
          env:
            - name: NODE_ENV
              value: "production"
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: azure-storage
                  key: db-connection-string
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 5000
      imagePullSecrets:
        - name: doyourchores-cr
---
apiVersion: v1
kind: Service
metadata:
  name: doyourchores-back
spec:
  ports:
    - port: 5000
  selector:
    app: doyourchores-back
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: doyourchores-ingress
  namespace: doyourchores-cluster
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: doyourchores-front
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: doyourchores-cluster
  labels:
    app: nginx-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ingress-controller
  template:
    metadata:
      labels:
        app: nginx-ingress-controller
    spec:
      containers:
        - name: nginx-ingress-controller
          image: k8s.gcr.io/ingress-nginx/controller:v0.46.0
          args:
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=nginx
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 80
              hostPort: 80
            - containerPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller-svc
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
  selector:
    app: nginx-ingress-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doyourchores-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: doyourchores-front
  template:
    metadata:
      labels:
        app: doyourchores-front
    spec:
      containers:
        - name: doyourchores-front
          image: doyourchores.azurecr.io/doyourchores:frontend
          env:
            - name: NODE_ENV
              value: "production"
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 250m
              memory: 600Mi
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: doyourchores-cr
---
apiVersion: v1
kind: Service
metadata:
  name: doyourchores-front
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: doyourchores-front
